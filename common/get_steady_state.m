function [bN1, bS1] = get_steady_state(param)
% assumes G = g0(N-N0)/(1+eps.*S)

bN1 = (1/(param.const.q*param.taop - param.beta*param.const.q*param.taop))*...
((param.const.q^2*param.taon)/(2*(param.eps*param.const.q + param.gain*param.const.q*param.taon)) + param.etai*param.I*param.taon*param.taop - param.etai*param.Ioff*param.taon* param.taop -...
 (param.beta*param.eps*param.etai*param.I*param.const.q*param.taon* param.taop)/(2*(param.eps*param.const.q + param.gain*param.const.q*param.taon)) +...
 (param.beta*param.eps*param.etai*param.Ioff*param.const.q*param.taon* param.taop)/(2*(param.eps*param.const.q + param.gain*param.const.q*param.taon)) +...
 (param.gain*param.N0*param.const.q^2*param.taon*param.taop)/(2*(param.eps*param.const.q + param.gain*param.const.q*param.taon)) -...
 (param.beta*param.gain* param.N0*param.const.q^2*param.taon*param.taop)/(2*(param.eps*param.const.q + param.gain*param.const.q*param.taon)) -...
 (param.etai*param.gain*param.I*param.const.q* param.taon^2*param.taop)/(2*(param.eps*param.const.q + param.gain*param.const.q*param.taon)) +...
 (param.etai*param.gain*param.Ioff*param.const.q* param.taon^2*param.taop)/(2*(param.eps*param.const.q + param.gain*param.const.q*param.taon)) -...
 (param.const.q*param.taon* sqrt(-4*(param.eps*param.const.q + param.gain*param.const.q*param.taon)*((-param.beta)*param.etai*param.I*param.taop +...
 param.beta*param.etai*param.Ioff*param.taop) + (param.const.q - param.beta*param.eps*param.etai*param.I*param.taop +...
 param.beta*param.eps*param.etai*param.Ioff*param.taop + param.gain*param.N0*param.const.q*param.taop - param.beta*param.gain*param.N0*param.const.q*param.taop -...
 param.etai*param.gain*param.I*param.taon*param.taop + param.etai*param.gain*param.Ioff*param.taon*param.taop).^2))/(2*(param.eps*param.const.q + param.gain*param.const.q*param.taon)));

bS1 = (1/(2*(param.eps*param.const.q + param.gain*param.const.q*param.taon)))*...
    (-param.const.q + param.beta*param.eps*param.etai*param.I*param.taop - param.beta*param.eps*param.etai*param.Ioff*param.taop -...
    param.gain*param.N0*param.const.q*param.taop + param.beta*param.gain*param.N0*param.const.q*param.taop +...
 param.etai*param.gain*param.I*param.taon*param.taop - param.etai*param.gain*param.Ioff*param.taon*param.taop +...
 sqrt(-4*(param.eps*param.const.q + param.gain*param.const.q*param.taon)*((-param.beta)*param.etai*param.I*param.taop + param.beta*param.etai*param.Ioff*param.taop) +...
 (param.const.q - param.beta*param.eps*param.etai*param.I*param.taop + param.beta*param.eps*param.etai*param.Ioff*param.taop +...
 param.gain*param.N0*param.const.q*param.taop - param.beta*param.gain*param.N0*param.const.q*param.taop - param.etai*param.gain*param.I*param.taon*param.taop +...
 param.etai*param.gain*param.Ioff*param.taon*param.taop).^2));
